legend("topleft", legend = c("f", "F"),cex = 1.2, col = c( "darkgreen","blue"),
title.adj =0, lty = 1, lwd = 2, box.lty = 1)
###############################################
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(latex2exp)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Exponentialverteilte Zufallsvariable"),
# \uxxxx codes für griechische Buchstaben: http://www.javascripter.net/faq/greekletters.htm
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("a",
"Parameter	\u03BB",
min = 0,
max = 4,
value = 0.05,
step=0.01),
sliderInput("b",
"Parameter	\u03BB",
min = 0,
max = 4,
value = 0.05,
step=0.01),
checkboxInput("f",
"f",
value = TRUE
),
checkboxInput("F",
"F",
value = FALSE
)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
xt <- seq(-47,174, by = 0.001)
a<- input$a
b<- input$b
# adapt our  x axis for different values of Lambda
if (b<=0.05)
{
xt <- seq(-47,174, by = 0.001)
}else if(0.5<=b & b<=0.1)
{
xt <- seq(-4,15, by = 0.001)
}else
{
xt <- seq(-0.5,2, by =0.0001)
}
f1<- dunif(xt,a,b)
F1<-punif(xt,a,b)
if(input$f & !input$F)
{
plot(xt, f1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "blue",pch= 16, cex=0.5, main="W-Dichte fn einer gleichverteilten ZV")
}else if(!input$f & input$F)
{
plot(xt, F1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "darkgreen",pch= 16, cex=0.5, main="W-Dichte VF einer gleichverteilten ZV" )
}else if((input$f) & (input$F))
{
plot(xt, F1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "darkgreen",pch= 16, cex=0.5, main="W-Dichte fn und VF einer gleichverteilten ZV")
lines(xt, f1, col = "blue", type = "p", pch= 16, cex=0.5)
# Legend
legend("topleft", legend = c("f", "F"),cex = 0.7, col = c( "blue","darkgreen"),title.adj =0, lty = 1, lwd=2, box.lty = 1)
}else
{
plot(NULL, xlab="t,x",ylab = "fn(t),Tn(x)",col="red",lwd=3, main = "Gaußsche Funktion",ylim=c(0,1),xlim=c(-10,10))
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
###############################################
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(latex2exp)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Exponentialverteilte Zufallsvariable"),
# \uxxxx codes für griechische Buchstaben: http://www.javascripter.net/faq/greekletters.htm
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("a",
"Parameter	\u03BB",
min = 0,
max = 4,
value = 0.05,
step=0.01),
sliderInput("b",
"Parameter	\u03BB",
min = 0,
max = 4,
value = 0.05,
step=0.01),
checkboxInput("f",
"f",
value = TRUE
),
checkboxInput("F",
"F",
value = FALSE
)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
xt <- 0
a<- input$a
b<- input$b
# adapt our  x axis for different values of Lambda
if (b<=5)
{
xt <- seq(-1,7, by = 0.001)
}else if(5< b & b<=60)
{
xt <- seq(0,80, by = 0.001)
}else
{
xt <- seq(-0.5,2, by =0.0001)
}
f1<- dunif(xt,a,b)
F1<-punif(xt,a,b)
if(input$f & !input$F)
{
plot(xt, f1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "blue",pch= 16, cex=0.5, main="W-Dichte fn einer gleichverteilten ZV")
}else if(!input$f & input$F)
{
plot(xt, F1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "darkgreen",pch= 16, cex=0.5, main="W-Dichte VF einer gleichverteilten ZV" )
}else if((input$f) & (input$F))
{
plot(xt, F1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "darkgreen",pch= 16, cex=0.5, main="W-Dichte fn und VF einer gleichverteilten ZV")
lines(xt, f1, col = "blue", type = "p", pch= 16, cex=0.5)
# Legend
legend("topleft", legend = c("f", "F"),cex = 0.7, col = c( "blue","darkgreen"),title.adj =0, lty = 1, lwd=2, box.lty = 1)
}else
{
plot(NULL, xlab="t,x",ylab = "fn(t),Tn(x)",col="red",lwd=3, main = "Gaußsche Funktion",ylim=c(0,1),xlim=c(-10,10))
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
shiny::runApp()
###############################################
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(latex2exp)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Exponentialverteilte Zufallsvariable"),
# \uxxxx codes für griechische Buchstaben: http://www.javascripter.net/faq/greekletters.htm
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("b",
"Parameter	b",
min = 0,
max = 60,
value = 0.5,
step=0.1),
sliderInput("a",
"Parameter	a",
min = 0,
max = 60,
value = 0.5,
step=0.1),
checkboxInput("f",
"f",
value = TRUE
),
checkboxInput("F",
"F",
value = FALSE
)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output,session) {
output$distPlot <- renderPlot({
observe({
if (input$a >= input$b) {
updateSliderInput(session, "a", value = input$b - 1)
}
})
xt <- 0
a<- input$a
b<- input$b
# adapt our  x axis for different values of Lambda
if (b<=5)
{
xt <- seq(-1,7, by = 0.001)
}else if(5< b & b<=60)
{
xt <- seq(0,80, by = 0.001)
}else
{
xt <- seq(-0.5,2, by =0.0001)
}
f1<- dunif(xt,a,b)
F1<-punif(xt,a,b)
if(input$f & !input$F)
{
plot(xt, f1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "blue",pch= 16, cex=0.5, main="W-Dichte fn einer gleichverteilten ZV")
}else if(!input$f & input$F)
{
plot(xt, F1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "darkgreen",pch= 16, cex=0.5, main="W-Dichte VF einer gleichverteilten ZV" )
}else if((input$f) & (input$F))
{
plot(xt, F1, type = "p",xlab="t,x",ylab = "fn(t),Tn(x)", lwd=2, col = "darkgreen",pch= 16, cex=0.5, main="W-Dichte fn und VF einer gleichverteilten ZV")
lines(xt, f1, col = "blue", type = "p", pch= 16, cex=0.5)
# Legend
legend("topleft", legend = c("f", "F"),cex = 0.7, col = c( "blue","darkgreen"),title.adj =0, lty = 1, lwd=2, box.lty = 1)
}else
{
plot(NULL, xlab="t,x",ylab = "fn(t),Tn(x)",col="red",lwd=3, main = "Gaußsche Funktion",ylim=c(0,1),xlim=c(-10,10))
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
shiny::runApp()
